{
  "name": "blocked",
  "version": "1.2.1",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/visionmedia/node-blocked.git"
  },
  "description": "check if the event loop is blocked",
  "keywords": [
    "block",
    "event",
    "loop",
    "performance"
  ],
  "dependencies": {},
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha",
    "coverage": "./node_modules/istanbul/lib/cli.js cover node_modules/mocha/bin/_mocha -- 'test.js'"
  },
  "devDependencies": {
    "mocha": "*",
    "istanbul": "0.4.1"
  },
  "engines": {
    "node": ">= 0.9.1"
  },
  "license": "MIT",
  "readme": "\n# blocked\n\n  Check if a node event loop is blocked.\n\n## Installation\n\n```\n$ npm install blocked\n```\n\n## Example\n\n  The `blocked()` function reports every value over 10ms, do whatever\n  you want with that value, graph it, log it, alert, etc.\n\n  The process won't be kept open through this!\n\n```js\nvar blocked = require('blocked');\n\nsetInterval(function(){\n  Array(10000000).join('a')\n}, 500);\n\nsetInterval(function(){\n  Array(100000000).join('a')\n}, 3000);\n\nblocked(function(ms){\n  console.log('BLOCKED FOR %sms', ms | 0);\n});\n```\n\n## Params and return value\n\n```\nvar timer = blocked(fn, options);\n```\n\n* fn: The callback function to execute when the event loop is blocked. Will send in the amnount of time in ms that the event loop was blocked.\n* options: _Optional._ Options object to configure the behaviour. For now, only the `threshold` option is supported. It determines the amount of ms used to determine if the function callback should be executed; useful to speed up tests \n\n\n```\nblocked(function(ms) {\n    console.log(\"Blocked\");\n}, {threshold:1});\n```\n  \nReturns: A reference to the timer. Useful for clearing the timer. \n\n```\nvar timer = blocked(function(ms) {\n                console.log(\"Blocked\");\n            }, {threshold:1});\nclearInterval(timer);\n```\n\n\n# License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/visionmedia/node-blocked/issues"
  },
  "homepage": "https://github.com/visionmedia/node-blocked#readme",
  "_id": "blocked@1.2.1",
  "_from": "blocked@>=1.2.1 <2.0.0"
}
